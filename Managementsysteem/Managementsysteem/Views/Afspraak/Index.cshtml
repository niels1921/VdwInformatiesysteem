@model ContosoUniversity.PaginatedList<Managementsysteem.Models.Afspraak>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentfilter="@ViewData["CurrentFilter"]">Datum</a>
            </th>
            <th>
                Omschrijving
            </th>
            <th>
                Klant
            </th>
            <th>
                Project
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Omschrijving)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Klant.Naam)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Naam)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
<script src="~/js/daypilot/daypilot-all.min.js" asp-append-version="true"></script>
<link href="icons/style.css" rel="stylesheet" type="text/css">

<div class="main">
    <div style="float:left; width: 150px;">
        <div id="nav"></div>
    </div>
    <div style="margin-left: 150px;">
        <div id="dp"></div>
    </div>
</div>

<script>

    var nav = new DayPilot.Navigator("nav");
    nav.showMonths = 3;
    nav.skipMonths = 3;
    nav.selectMode = "week";
    nav.onTimeRangeSelected = function (args) {
        dp.startDate = args.day;
        dp.update();
        dp.events.load("/api/events");
    };
    nav.init();


    var dp = new DayPilot.Calendar("dp");
    dp.viewType = "Week";
    dp.onTimeRangeSelected = function (args) {
        DayPilot.Modal.prompt("Create a new event:", "Event").then(function (modal) {
            var dp = args.control;
            dp.clearSelection();
            if (!modal.result) {
                return;
            }
            var params = {
                start: args.start.toString(),
                end: args.end.toString(),
                text: modal.result,
                resource: args.resource
            };
            $.ajax({
                type: 'POST',
                url: '/api/events',
                data: JSON.stringify(params),
                success: function (data) {
                    dp.events.add(new DayPilot.Event(data));
                    dp.message("Event created");
                },
                contentType: "application/json",
                dataType: 'json'
            });
        });
    };
    dp.onEventMove = function (args) {
        var params = {
            id: args.e.id(),
            start: args.newStart.toString(),
            end: args.newEnd.toString()
        };
        $.ajax({
            type: 'PUT',
            url: '/api/events/' + args.e.id() + "/move",
            data: JSON.stringify(params),
            success: function (data) {
                dp.message("Event moved");
            },
            contentType: "application/json",
            dataType: 'json'
        });
    };
    dp.onEventResize = function (args) {
        var params = {
            id: args.e.id(),
            start: args.newStart.toString(),
            end: args.newEnd.toString()
        };
        $.ajax({
            type: 'PUT',
            url: '/api/events/' + args.e.id() + "/move",
            data: JSON.stringify(params),
            success: function (data) {
                dp.message("Event resized");
            },
            contentType: "application/json",
            dataType: 'json'
        });
    };
    dp.onBeforeEventRender = function (args) {
        args.data.barColor = args.data.color;
        args.data.areas = [
            { top: 2, right: 2, icon: "icon-triangle-down", visibility: "Hover", action: "ContextMenu", style: "font-size: 12px; background-color: #f9f9f9; border: 1px solid #ccc; padding: 2px 2px 0px 2px; cursor:pointer;" }
        ];
    };
    dp.contextMenu = new DayPilot.Menu({
        items: [
            {
                text: "Delete",
                onClick: function (args) {
                    var e = args.source;
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/events/' + e.id(),
                        success: function (data) {
                            dp.events.remove(e);
                            dp.message("Event deleted");
                        },
                        contentType: "application/json",
                        dataType: 'json'
                    });
                }
            },
            {
                text: "-"
            },
            {
                text: "Blue",
                icon: "icon icon-blue",
                color: "#1066a8",
                onClick: function (args) { updateColor(args.source, args.item.color); }
            },
            {
                text: "Green",
                icon: "icon icon-green",
                color: "#6aa84f",
                onClick: function (args) { updateColor(args.source, args.item.color); }
            },
            {
                text: "Yellow",
                icon: "icon icon-yellow",
                color: "#f1c232",
                onClick: function (args) { updateColor(args.source, args.item.color); }
            },
            {
                text: "Red",
                icon: "icon icon-red",
                color: "#cc0000",
                onClick: function (args) { updateColor(args.source, args.item.color); }
            },

        ]
    });
    dp.init();

    dp.events.load("/api/events");


    function updateColor(e, color) {
        var params = {
            color: color
        };
        $.ajax({
            type: 'PUT',
            url: '/api/events/' + e.id() + '/color',
            data: JSON.stringify(params),
            success: function (data) {
                e.data.color = color;
                dp.events.update(e);
                dp.message("Color updated");
            },
            contentType: "application/json",
            dataType: 'json'
        });
    }
</script>